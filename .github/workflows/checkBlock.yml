name: Check if environment is blocked or not

on:
  repository_dispatch:
    types: checkBlock

jobs:
  respond:
    name: Calls the callback being passed in
    runs-on: ubuntu-latest
    steps:
      - name: getBodyParams
        id: getBodyParams
        run: echo "account name ${{ github.event.client_payload.accountName }}"
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: 'ps/beebrush'
      
      - name: Run YAML check script
        id: check_result
        run: |
          pip install pyyaml
          python yaml_checker.py manifests/blockingConfiguration/block-env.yml ${{ github.event.client_payload.accountName }} ${{ github.event.client_payload.applicationName }}
        continue-on-error: true
      - name: Set output based on script result
        run: |
          echo "Outcome ${{ steps.check_result.outcome}}"
          if [ ${{ steps.check_result.outcome }} -eq 0 ]; then
              echo "::set-output name=combination_exists::true"
          else
              echo "::set-output name=combination_exists::false"
          fi
      - name: getToken
        id: getToken
        uses: fjogeleit/http-request-action@master
        with:
          url: "https://auth.cloud.armory.io/oauth/token"
          method: "POST"
          customHeaders: '{ "Content-Type": "application/x-www-form-urlencoded" }'
          data: 'audience=https://api.cloud.armory.io&grant_type=client_credentials&client_id=${{ secrets.CDAAS_CLIENT_ID }}&client_secret=${{ secrets.CDAAS_CLIENT_SECRET }}'
      - name: callCallback
        id: callCallback
        uses: fjogeleit/http-request-action@master
        with:
          url: ${{ github.event.client_payload.callbackUri }}
          method: 'POST'
          bearerToken: ${{ fromJSON(steps.getToken.outputs.response).access_token }}
          customHeaders: '{ "Content-Type": "application/json" }'
          data: '{ "success": ${{ steps.check_result.outputs.combination_exists }}, "mdMessage": "Application or account block is: ${{ steps.check_result.outputs.combination_exists }}" }'
      - name: show http response
        run: echo ${{ steps.callCallback.outputs.response }}
