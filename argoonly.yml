version: v1
kind: kubernetes
application: potato-facts-w-argo-rollouts
targets:  # The list of manifests sources
  # This in the name of a deployment, underneath it are its configuration
  prod-operator:
    # the name of an agent configured account
    account: demo-prod-west-cluster
    # Optionally override the namespaces that are in the manifests
    namespace: borealis-argo
    # This is the key to a strategy under the strategies map
    strategy: rolling
    constraints:
      afterDeployment:
      - runWebhook:
          name: Refer to Argo Rollouts for status
manifests:  
  - path: manifests/argo-facts.yml
    targets: ["prod-operator"]
  - path: manifests/potato-facts-external-service.yml
    targets: ["prod-operator"]
strategies: 
  rolling:
    canary:
      steps: 
      - setWeight:
          weight: 100
  # this is the name for the strategy
  mycanary:
    # This map key, is the deployment strategy type
    canary: 
        # List of canary steps
        steps:
          # The map key is the step type
          - setWeight:
              weight: 25
          - analysis:
              interval: 10
              units: seconds
              numberOfJudgmentRuns: 1
              rollBackMode: manual
              rollForwardMode: automatic
              queries:
              - avgCPUUsage-pass
          - runWebhook:
              name: Check_Logs
          #- pause:
          #    untilApproved: true
          - setWeight:
              weight: 50
          - analysis:
              interval: 10
              units: seconds
              numberOfJudgmentRuns: 3
              rollBackMode: manual
              rollForwardMode: manual
              queries: 
              - avgCPUUsage-fail
              - avgCPUUsage-pass
          - runWebhook:
              name: Check_Logs
          - setWeight:
              weight: 100
  myBlueGreen:
    blueGreen:

# activeService: potato-facts-external
      redirectTrafficAfter:
        - analysis:
            interval: 10
            units: seconds
            numberOfJudgmentRuns: 1
            rollBackMode: manual
            rollForwardMode: automatic
            queries:
              - avgCPUUsage-pass
      shutDownOldVersionAfter:
        - pause:
            untilApproved: true
        - runWebhook:
            name: Check_Logs
        - analysis:
            interval: 10
            units: seconds
            numberOfJudgmentRuns: 1
            rollBackMode: manual
            queries:
              - avgCPUUsage-pass

analysis:  # Canary analysis queries and thresholds
  defaultMetricProviderName: Stephen-Prometheus
  queries:
    - name: avgCPUUsage-pass
      upperLimit: 10000 #3
      lowerLimit: 0
      queryTemplate: >-
        avg (avg_over_time(container_cpu_system_seconds_total{job="kubelet"}[{{armory.promQlStepInterval}}]) * on (pod)  group_left (annotation_app)
        sum(kube_pod_annotations{job="kube-state-metrics",annotation_deploy_armory_io_replica_set_name="{{armory.replicaSetName}}"})
        by (annotation_app, pod)) by (annotation_app) OR on() vector(0)
    - name: avgCPUUsage-fail
      upperLimit: 0.001
      lowerLimit: 0
      queryTemplate: >-
       avg (avg_over_time(container_cpu_system_seconds_total{job="kubelet"}[{{armory.promQlStepInterval}}]) * on (pod)  group_left (annotation_app)
        sum(kube_pod_annotations{job="kube-state-metrics",annotation_deploy_armory_io_replica_set_name="{{armory.replicaSetName}}"})
        by (annotation_app, pod)) by (annotation_app) 

trafficManagement:
  - targets: [prod-east]
    smi:
      - rootServiceName: potato-facts-cluster-svc
      - rootServiceName: potato-lies-cluster-svc
  - targets: [prod-eu]
    kubernetes:
      - activeService: potato-facts-external
      - activeService: potato-lies-external


webhooks: #Note: All webhooks in this demo simply cann the github action workflow for the 'webhookCallback' event on a github repo. They have different names for demo purposes.
  - name: Security_Scanners
    method: POST
    uriTemplate: https://api.github.com/repos/{{secrets.github_org}}/{{secrets.github_repository}}/dispatches
    headers:
      - key: Authorization
        value: token {{secrets.github_token}}
      - key: Content-Type
        value: application/json
    bodyTemplate:
      inline:  >-
        {
        "event_type": "checkLogs",
        "client_payload": {
            "callbackUri": "{{armory.callbackUri}}/callback"
            }
        }
    retryCount: 3
  - name: Check_Logs
    method: POST
    uriTemplate: https://api.github.com/repos/{{secrets.github_org}}/{{secrets.github_repository}}/dispatches
    headers:
      - key: Authorization
        value: token {{secrets.github_token}}
      - key: Content-Type
        value: application/json
    bodyTemplate:
      inline:  >-
        {
        "event_type": "webhookCallback",
        "client_payload": {
            "callbackUri": "{{armory.callbackUri}}/callback"
            }
        }
    retryCount: 3
  - name: Integration_Tests
    method: POST
    uriTemplate: https://api.github.com/repos/{{secrets.github_org}}/{{secrets.github_repository}}/dispatches
    headers:
      - key: Authorization
        value: token {{secrets.github_token}}
      - key: Content-Type
        value: application/json
    bodyTemplate:
      inline:  >-
        {
        "event_type": "checkLogs",
        "client_payload": {
            "callbackUri": "{{armory.callbackUri}}/callback"
            }
        }
    retryCount: 3
  - name: Refer to Argo Rollouts for statusGet
    method: GET
    uriTemplate: http://cmd-hook.borealis-demo-agent-prod:8081/cmd?cmd=kubectl&arg=wait%20-n%3Dborealis-argo%20rollout%2Fpotato-facts%20--for%3Dcondition%3DCompleted&callbackURL={{armory.callbackUri}}%2fcallback
    networkMode: remoteNetworkAgent
    agentIdentifier: demo-prod-west-cluster
    retryCount: 3
  - name: Refer to Argo Rollouts for status
    method: POST
    uriTemplate: http://cmd-hook.borealis-demo-agent-prod:8081/cmd
    networkMode: remoteNetworkAgent
    agentIdentifier: demo-prod-west-cluster
    retryCount: 3
    bodyTemplate:
      inline:  >-
        {
        "cmd": "kubectl",
        "arg": "wait -n=borealis-argo rollout/potato-facts --for=condition=Completed",
        "callbackURL": "{{armory.callbackUri}}/callback"
        }